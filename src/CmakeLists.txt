cmake_minimum_required (VERSION 3.10 FATAL_ERROR)

project(snap)

if(" ${CMAKE_SOURCE_DIR}" STREQUAL " ${CMAKE_BINARY_DIR}")
  message(FATAL_ERROR "
FATAL: In-source builds are not allowed.
       You should create a separate directory for build files.
")
endif()

set(SNAP_VERSION_MAJOR 1)
set(SNAP_VERSION_MINOR 0)
set(SNAP_VERSION_PATCH 0)
set(SNAP_VERSION ${SNAP_VERSION_MAJOR}.${SNAP_VERSION_MINOR}.${SNAP_VERSION_PATCH})

add_definitions(-DSNAP_VERSION_MAJOR=${SNAP_VERSION_MAJOR})
add_definitions(-DSNAP_VERSION_MINOR=${SNAP_VERSION_MINOR})
add_definitions(-DSNAP_VERSION_PATCH=${SNAP_VERSION_PATCH})

set(BUILD_ROOT_DIR "")

set(ENABLE_LTO OFF)

if(WIN32)
set(BUILD_ROOT_DIR ${CMAKE_SOURCE_DIR}/../build/snap/Windows/win-x64/${CMAKE_BUILD_TYPE})
endif()

add_subdirectory(snap.corerun)

if(MSVC)
	set(CMAKE_CXX_FLAGS_DEBUG    "${CMAKE_CXX_FLAGS_DEBUG} /MP -DDEBUG -D_DEBUG")
	set(CMAKE_CXX_FLAGS_RELEASE  "${CMAKE_CXX_FLAGS_RELEASE} /MP -DNDEBUG")

	if(ENABLE_LTO)
	    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /GL")
		set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG")
	endif()
	
endif()

# ========================== C/C++ options ==========================
if(CMAKE_CXX_COMPILER_VERSION)
  set(SNAP_COMPILER_STR "${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1} (ver ${CMAKE_CXX_COMPILER_VERSION})")
else()
  set(SNAP_COMPILER_STR "${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1}")
endif()
string(STRIP "${SNAP_COMPILER_STR}" SNAP_COMPILER_STR)

message(STATUS "")
message(STATUS "  C/C++:")
message(STATUS "    C++ Compiler:"           ${SNAP_COMPILER_STR})
message(STATUS "    C++ flags (Release):"    ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE})
message(STATUS "    C++ flags (Debug):"      ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG})
message(STATUS "    C Compiler:"             ${CMAKE_C_COMPILER} ${CMAKE_C_COMPILER_ARG1})
message(STATUS "    C flags (Release):"      ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_RELEASE})
message(STATUS "    C flags (Debug):"        ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_DEBUG})

if(WIN32 OR UNIX)
  message(STATUS "    Linker flags (Release):" ${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_RELEASE})
  message(STATUS "    Linker flags (Debug):"   ${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_DEBUG})
else()
   message(FATAL_ERROR "Target platform is not supported.")
endif()