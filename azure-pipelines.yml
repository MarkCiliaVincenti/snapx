variables:
  buildScript: build.ps1 -Target Bootstrap -DockerImagePrefix $(build.buildId) -CIBuild "1"

jobs:
- job: Ubuntu_1604
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        sudo apt install apt-transport-https
        echo "deb https://download.mono-project.com/repo/ubuntu stable-xenial main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt update
        sudo apt-get -yq install mono-develop
    displayName: Installing mono develop
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk' 
      version: '2.2.104' 
    displayName: Install .NET Core 2.2.104
  - script: pwsh $(buildScript)
  - task: PublishTestResults@2
    displayName: Publish test results
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: Dotnet_Ubuntu
      mergeTestResults: true
  - task: PublishTestResults@2
    displayName: Publish google test results
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/*.xml'
      testRunTitle: GoogleTest_Ubuntu_1604
      mergeTestResults: false
- job: Windows_Visual_Studio_2017
  pool: 
    name: Youpark
    vmImage: 'win1803'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk' 
      version: '2.2.104' 
    displayName: Install .NET Core 2.2.104
  - script: powershell -f $(buildScript) -VisualStudioVersion "15"
  - task: PublishTestResults@2
    displayName: Publish .NET test results
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: Dotnet_Windows_Visual_Studio_2017
      mergeTestResults: false
  - task: PublishTestResults@2
    displayName: Publish google test results
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/googletestsummary.xml'
      testRunTitle: GoogleTest_Windows_Visual_Studio_2017
      mergeTestResults: false
  - task: NuGetCommand@2
    displayName: Publish nuget packages to snapx myget feed
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: 'snapx-myget-feed'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg' 
